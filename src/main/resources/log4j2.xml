<?xml version="1.0" encoding="UTF-8"?>
<!-- status :这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval
    : Log4j能够自动检测修改配置文件和重新配置本身,设置间隔秒数。 注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件，
    文件数据达到最大值时，旧数据会被压缩并放进指定文件夹-->
<Configuration status="info" monitorInterval="600">

    <properties>
        <!--文件输出格式-->
        <property name="PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} |-%-5level [%thread] %c [%logger] -| %msg%n</property>
    </properties>

    <Appenders>
        <Console name="SYSOUT" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d [%t] %-5p [%c] - %m%n"/>
        </Console>
        <!-- name可以自定义，作用是在Loggers中AppenderRef中使用-->
        <!-- fileName定义输出文件名称（当前文件）-->
        <!-- filePattern定义输出文件名称（文件满足条件后自动截断，生成历史文件）-->
        <RollingFile name="log-store"
                     fileName="logs/moral-tool.log"
                     filePattern="logs/moral-tool.log.%d{yyyy-MM-dd}.gz">
            <!--file只输出info及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <PatternLayout>
                <Pattern>%d [%t] %-5p [%c] - %m%n</Pattern>
            </PatternLayout>
            <!--文件截断的条件，具体参考文档-->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="icu.moral" level="INFO" additivity="true">
        </logger>
        <Root level="WARN">
        </Root>
    </Loggers>
</Configuration>